trigger: none

pr: none

parameters:
  - name: buildAgentHost
    displayName: 'The generic host build agent configuration:'
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: ubuntu-20.04
        os: windows
  - name: buildAgentWindows
    displayName: 'The Windows build agent configuration:'
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: windows-2022
        os: windows
  - name: buildAgentMac
    displayName: 'The macOS build agent configuration:'
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: macos-13
        os: macos
  - name: buildAgentLinux
    displayName: 'The Linux build agent configuration:'
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: ubuntu-20.04
        os: linux
  - name: overrideSkiaSharpPipelineId
    displayName: 'The triggering SkiaSharp pipeline ID (typically 10789):'
    type: string
  - name: overrideSkiaSharpRunId
    displayName: 'The triggering SkiaSharp run ID:'
    type: string
  - name: overrideSkiaSharpRunName
    displayName: 'The triggering SkiaSharp full version number (#.#.#-preview.#+branch):'
    type: string

variables:
  - template: /scripts/azure-pipelines-variables.yml@self
  - name: OVERRIDE_SKIASHARP_PIPELINEID
    value: ${{ parameters.overrideSkiaSharpPipelineId }}
  - name: OVERRIDE_SKIASHARP_RUNID
    value: ${{ parameters.overrideSkiaSharpRunId }}
  - name: OVERRIDE_SKIASHARP_RUNNAME
    value: ${{ parameters.overrideSkiaSharpRunName }

resources:
  repositories:
    - repository: xamarin-templates
      type: github
      name: xamarin/yaml-templates
      endpoint: xamarin
      ref: refs/heads/main
  pipelines:
    - pipeline: SkiaSharp
      source: SkiaSharp
      trigger: true

extends:
  template: /scripts/azure-template.yml@self
  parameters:
    pool: ${{ parameters.buildAgentHost.pool }}
    stages:
      - template: /scripts/azure-templates-stages.yml@self
        parameters:
          buildPipelineType: 'tests'
          buildAgentHost: ${{ parameters.buildAgentHost }}
          buildAgentWindows: ${{ parameters.buildAgentWindows }}
          buildAgentWindowsNative: ${{ parameters.buildAgentWindows }}
          buildAgentMac: ${{ parameters.buildAgentMac }}
          buildAgentMacNative: ${{ parameters.buildAgentMac }}
          buildAgentLinux: ${{ parameters.buildAgentLinux }}
          buildAgentLinuxNative: ${{ parameters.buildAgentLinux }}